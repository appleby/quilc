# Input
I 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j>
# Input
X 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   0.000 + 0.000j     1.000 + 0.000j
   1.000 + 0.000j     0.000 + 0.000j>
# Input
Y 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   0.000 + 0.000j     0.000 - 1.000j
   0.000 + 1.000j     0.000 + 0.000j>
# Input
Z 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j    -1.000 + 0.000j>
# Input
X 0
X 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j>
# Input
I 0
I 1
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j>
# Input
CNOT 0 1
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j>
# Input
CNOT 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j>
# Input
X 0
CNOT 0 1
# Output
#<MAGICL:MATRIX [Z] 4x4:
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j>
# Input
X 0
CNOT 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j>
# Input
PHASE(pi/2) 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 1.000j>
# Input
PHASE(-pi/2) 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 - 1.000j>
# Input
# Same as above
DAGGER PHASE(pi/2) 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 - 1.000j>
# Input
# Same as PHASE(pi/2) 0
DAGGER DAGGER PHASE(pi/2) 0
# Output
#<MAGICL:MATRIX [Z] 2x2:
   1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 1.000j>
# Input
# Should be the same as CNOT 0 1, above
CONTROLLED X 0 1
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j>
# Input
# Should be the same as CNOT 1 0, above
CONTROLLED X 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j>
# Input
# Test CONTROLLED on non-permutation gate
CONTROLLED Y 0 1
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j>
# Input
CONTROLLED Y 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j>
# Input
CONTROLLED DAGGER PHASE(pi/2) 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j>
# Input
# Same as above
DAGGER CONTROLLED PHASE(pi/2) 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j>
# Input
FORKED Y 0 1
# Output
#<MAGICL:MATRIX [Z] 4x4:
   0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j
   0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j>
# Input
FORKED Y 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   0.000 + 0.000j     0.000 - 1.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j>
# Input
FORKED PHASE(0, pi/2) 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j>
# Input
FORKED PHASE(pi/2, 0) 1 0
# Output
#<MAGICL:MATRIX [Z] 4x4:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j>
# Input
CONTROLLED FORKED Y 2 1 0
# Output
#<MAGICL:MATRIX [Z] 8x8:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j>
# Input
# Same as above
FORKED CONTROLLED Y 1 2 0
# Output
#<MAGICL:MATRIX [Z] 8x8:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j>
# Input
FORKED CONTROLLED Y 2 1 0
# Output
#<MAGICL:MATRIX [Z] 8x8:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j>
# Input
# Same as above
CONTROLLED FORKED Y 1 2 0
# Output
#<MAGICL:MATRIX [Z] 8x8:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 1.000j     0.000 + 0.000j>
# Input
CONTROLLED FORKED DAGGER PHASE(0, pi/2) 2 1 0
# Output
#<MAGICL:MATRIX [Z] 8x8:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j>
# Input
# Same same
CONTROLLED DAGGER FORKED PHASE(0, pi/2) 2 1 0
# Output
#<MAGICL:MATRIX [Z] 8x8:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j>
# Input
# Same same
DAGGER CONTROLLED FORKED PHASE(0, pi/2) 2 1 0
# Output
#<MAGICL:MATRIX [Z] 8x8:
   1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     1.000 + 0.000j     0.000 + 0.000j
   0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 + 0.000j     0.000 - 1.000j>
